"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Writable_1 = require("./Writable");
const fs = require('fs');
const path = require('path');
const Bucket = 'sports-players';
const Key = '001.json';
const AccessKeyId = 'AKIAQKMTSO2ILYPFIWZN';
const SecretAccessKey = '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';
const Region = 'us-west-2';
async function main() {
    return new Promise((resolve, reject) => {
        let s3 = new Writable_1.S3WritableStream({
            accessKeyId: AccessKeyId,
            secretAccessKey: SecretAccessKey,
            region: Region,
            bucket: Bucket,
            key: Key
        });
        let read = fs.createReadStream(path.join(__dirname, '..', 'tsconfig.json'));
        read.pipe(s3);
        //read.on('data', data => console.log(data))
        s3.on('finish', () => {
            console.log(`Finsihed writing!`);
            resolve();
        });
        s3.on('error', (err) => {
            console.log(`Failed writing!`);
            reject(err);
        });
    });
}
main()
    .then(() => {
    console.log(`Success!`);
    process.exit(0);
})
    .catch(err => {
    console.error(`Failed! ${err}`);
    process.exit(1);
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGVzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9UZXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEseUNBQTZDO0FBRTdDLE1BQU0sRUFBRSxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQTtBQUN4QixNQUFNLElBQUksR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUE7QUFFNUIsTUFBTSxNQUFNLEdBQUcsZ0JBQWdCLENBQUE7QUFDL0IsTUFBTSxHQUFHLEdBQUcsVUFBVSxDQUFBO0FBQ3RCLE1BQU0sV0FBVyxHQUFHLHNCQUFzQixDQUFBO0FBQzFDLE1BQU0sZUFBZSxHQUFJLDBDQUEwQyxDQUFBO0FBQ25FLE1BQU0sTUFBTSxHQUFHLFdBQVcsQ0FBQTtBQUcxQixLQUFLLFVBQVUsSUFBSTtJQUNoQixPQUFPLElBQUksT0FBTyxDQUFDLENBQUMsT0FBTyxFQUFFLE1BQU0sRUFBRSxFQUFFO1FBQ3BDLElBQUksRUFBRSxHQUFHLElBQUksMkJBQWdCLENBQUM7WUFDM0IsV0FBVyxFQUFFLFdBQVc7WUFDeEIsZUFBZSxFQUFFLGVBQWU7WUFDaEMsTUFBTSxFQUFFLE1BQU07WUFDZCxNQUFNLEVBQUUsTUFBTTtZQUNkLEdBQUcsRUFBRSxHQUFHO1NBQ1YsQ0FBQyxDQUFBO1FBRUYsSUFBSSxJQUFJLEdBQUcsRUFBRSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLElBQUksRUFBRSxlQUFlLENBQUMsQ0FBQyxDQUFBO1FBRTNFLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUE7UUFFYiw0Q0FBNEM7UUFFNUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxRQUFRLEVBQUUsR0FBRyxFQUFFO1lBQ2xCLE9BQU8sQ0FBQyxHQUFHLENBQUMsbUJBQW1CLENBQUMsQ0FBQTtZQUNoQyxPQUFPLEVBQUUsQ0FBQTtRQUNaLENBQUMsQ0FBQyxDQUFBO1FBRUYsRUFBRSxDQUFDLEVBQUUsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxHQUFHLEVBQUUsRUFBRTtZQUNwQixPQUFPLENBQUMsR0FBRyxDQUFDLGlCQUFpQixDQUFDLENBQUE7WUFDOUIsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFBO1FBQ2QsQ0FBQyxDQUFDLENBQUE7SUFDTCxDQUFDLENBQUMsQ0FBQTtBQUNMLENBQUM7QUFFRCxJQUFJLEVBQUU7S0FDRixJQUFJLENBQUMsR0FBRyxFQUFFO0lBQ1IsT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQTtJQUN2QixPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFBO0FBQ2xCLENBQUMsQ0FBQztLQUNELEtBQUssQ0FBQyxHQUFHLENBQUMsRUFBRTtJQUNWLE9BQU8sQ0FBQyxLQUFLLENBQUMsV0FBVyxHQUFHLEVBQUUsQ0FBQyxDQUFBO0lBQy9CLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUE7QUFDbEIsQ0FBQyxDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTM1dyaXRhYmxlU3RyZWFtIH0gZnJvbSAnLi9Xcml0YWJsZSdcblxuY29uc3QgZnMgPSByZXF1aXJlKCdmcycpXG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpXG5cbmNvbnN0IEJ1Y2tldCA9ICdzcG9ydHMtcGxheWVycydcbmNvbnN0IEtleSA9ICcwMDEuanNvbidcbmNvbnN0IEFjY2Vzc0tleUlkID0gJ0FLSUFRS01UU08ySUxZUEZJV1pOJ1xuY29uc3QgU2VjcmV0QWNjZXNzS2V5ID0gICdlUzAyajN3cXhJZGlBZ1VMQkY2YmgwOC9rTURiZ0NaOFZEUkREb09kJ1xuY29uc3QgUmVnaW9uID0gJ3VzLXdlc3QtMidcblxuXG5hc3luYyBmdW5jdGlvbiBtYWluKCkge1xuICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIGxldCBzMyA9IG5ldyBTM1dyaXRhYmxlU3RyZWFtKHtcbiAgICAgICAgIGFjY2Vzc0tleUlkOiBBY2Nlc3NLZXlJZCxcbiAgICAgICAgIHNlY3JldEFjY2Vzc0tleTogU2VjcmV0QWNjZXNzS2V5LFxuICAgICAgICAgcmVnaW9uOiBSZWdpb24sXG4gICAgICAgICBidWNrZXQ6IEJ1Y2tldCxcbiAgICAgICAgIGtleTogS2V5XG4gICAgICB9KVxuICAgICAgXG4gICAgICBsZXQgcmVhZCA9IGZzLmNyZWF0ZVJlYWRTdHJlYW0ocGF0aC5qb2luKF9fZGlybmFtZSwgJy4uJywgJ3RzY29uZmlnLmpzb24nKSlcbiAgICAgIFxuICAgICAgcmVhZC5waXBlKHMzKVxuICAgICAgXG4gICAgICAvL3JlYWQub24oJ2RhdGEnLCBkYXRhID0+IGNvbnNvbGUubG9nKGRhdGEpKVxuICAgICAgXG4gICAgICBzMy5vbignZmluaXNoJywgKCkgPT4ge1xuICAgICAgICAgY29uc29sZS5sb2coYEZpbnNpaGVkIHdyaXRpbmchYClcbiAgICAgICAgIHJlc29sdmUoKVxuICAgICAgfSlcbiAgICAgIFxuICAgICAgczMub24oJ2Vycm9yJywgKGVycikgPT4ge1xuICAgICAgICAgY29uc29sZS5sb2coYEZhaWxlZCB3cml0aW5nIWApXG4gICAgICAgICByZWplY3QoZXJyKVxuICAgICAgfSlcbiAgIH0pXG59XG5cbm1haW4oKVxuICAgLnRoZW4oKCkgPT4ge1xuICAgICAgY29uc29sZS5sb2coYFN1Y2Nlc3MhYClcbiAgICAgIHByb2Nlc3MuZXhpdCgwKVxuICAgfSlcbiAgIC5jYXRjaChlcnIgPT4ge1xuICAgICAgY29uc29sZS5lcnJvcihgRmFpbGVkISAke2Vycn1gKVxuICAgICAgcHJvY2Vzcy5leGl0KDEpXG4gICB9KVxuIl19